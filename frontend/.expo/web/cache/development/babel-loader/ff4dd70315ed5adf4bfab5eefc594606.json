{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewzhang/Desktop/berkeley/fintech/sports-betting/frontend/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport { GoogleSignin, GoogleSigninButton, statusCodes } from 'react-native-google-signin';\n\nfunction App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loggedIn = _useState2[0],\n      setloggedIn = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userInfo = _useState4[0],\n      setuserInfo = _useState4[1];\n\n  _signIn = function _signIn() {\n    var _await$GoogleSignin$s, accessToken, idToken;\n\n    return _regeneratorRuntime.async(function _signIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(GoogleSignin.hasPlayServices());\n\n          case 3:\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(GoogleSignin.signIn());\n\n          case 5:\n            _await$GoogleSignin$s = _context.sent;\n            accessToken = _await$GoogleSignin$s.accessToken;\n            idToken = _await$GoogleSignin$s.idToken;\n            setloggedIn(true);\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n\n            if (_context.t0.code === statusCodes.SIGN_IN_CANCELLED) {\n              alert('Cancel');\n            } else if (_context.t0.code === statusCodes.IN_PROGRESS) {\n              alert('Signin in progress');\n            } else if (_context.t0.code === statusCodes.PLAY_SERVICES_NOT_AVAILABLE) {\n              alert('PLAY_SERVICES_NOT_AVAILABLE');\n            } else {}\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  useEffect(function () {\n    GoogleSignin.configure({\n      scopes: ['email'],\n      webClientId: '418977770929-g9ou7r9eva1u78a3anassxxxxxxx.apps.googleusercontent.com',\n      offlineAccess: true\n    });\n  }, []);\n\n  signOut = function signOut() {\n    return _regeneratorRuntime.async(function signOut$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(GoogleSignin.revokeAccess());\n\n          case 3:\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(GoogleSignin.signOut());\n\n          case 5:\n            setloggedIn(false);\n            setuserInfo([]);\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error(_context2.t0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(StatusBar, {\n    barStyle: \"dark-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), React.createElement(SafeAreaView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    contentInsetAdjustmentBehavior: \"automatic\",\n    style: styles.scrollView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.sectionContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, React.createElement(GoogleSigninButton, {\n    style: {\n      width: 192,\n      height: 48\n    },\n    size: GoogleSigninButton.Size.Wide,\n    color: GoogleSigninButton.Color.Dark,\n    onPress: this._signIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, !loggedIn && React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 31\n    }\n  }, \"You are currently logged out\"), loggedIn && React.createElement(Button, {\n    onPress: this.signOut,\n    title: \"LogOut\",\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andrewzhang/Desktop/berkeley/fintech/sports-betting/frontend/App.js"],"names":["React","useState","useEffect","GoogleSignin","GoogleSigninButton","statusCodes","App","loggedIn","setloggedIn","userInfo","setuserInfo","_signIn","hasPlayServices","signIn","accessToken","idToken","code","SIGN_IN_CANCELLED","alert","IN_PROGRESS","PLAY_SERVICES_NOT_AVAILABLE","configure","scopes","webClientId","offlineAccess","signOut","revokeAccess","console","error","styles","scrollView","body","sectionContainer","width","height","Size","Wide","Color","Dark","buttonContainer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\nGoogleSignin,\nGoogleSigninButton,\nstatusCodes,\n} from 'react-native-google-signin';\n\nfunction App() {\n  // Set an initializing state whilst Firebase connects\n  const [loggedIn, setloggedIn] = useState(false);\n  const [userInfo, setuserInfo] = useState([]);\n\n  _signIn = async () => {\n    try {\n      await GoogleSignin.hasPlayServices();\n      const {accessToken, idToken} = await GoogleSignin.signIn();\n      setloggedIn(true);\n    } catch (error) {\n      if (error.code === statusCodes.SIGN_IN_CANCELLED) {\n        // user cancelled the login flow\n        alert('Cancel');\n      } else if (error.code === statusCodes.IN_PROGRESS) {\n        alert('Signin in progress');\n        // operation (f.e. sign in) is in progress already\n      } else if (error.code === statusCodes.PLAY_SERVICES_NOT_AVAILABLE) {\n        alert('PLAY_SERVICES_NOT_AVAILABLE');\n        // play services not available or outdated\n      } else {\n        // some other error happened\n      }\n    }\n  };\n\n  useEffect(() => {\n    GoogleSignin.configure({\n      scopes: ['email'], // what API you want to access on behalf of the user, default is email and profile\n      webClientId:\n        '418977770929-g9ou7r9eva1u78a3anassxxxxxxx.apps.googleusercontent.com', // client ID of type WEB for your server (needed to verify user ID and offline access)\n      offlineAccess: true, // if you want to access Google API on behalf of the user FROM YOUR SERVER\n    });\n  }, []);\n\n  signOut = async () => {\n    try {\n      await GoogleSignin.revokeAccess();\n      await GoogleSignin.signOut();\n      setloggedIn(false);\n      setuserInfo([]);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n\n    return (\n      <>\n        <StatusBar barStyle=\"dark-content\" />\n        <SafeAreaView>\n          <ScrollView\n            contentInsetAdjustmentBehavior=\"automatic\"\n            style={styles.scrollView}>\n            <Header />\n\n            <View style={styles.body}>\n              <View style={styles.sectionContainer}>\n                <GoogleSigninButton\n                  style={{width: 192, height: 48}}\n                  size={GoogleSigninButton.Size.Wide}\n                  color={GoogleSigninButton.Color.Dark}\n                  onPress={this._signIn}\n                />\n              </View>\n              <View style={styles.buttonContainer}>\n                {!loggedIn && <Text>You are currently logged out</Text>}\n                {loggedIn && (\n                  <Button\n                    onPress={this.signOut}\n                    title=\"LogOut\"\n                    color=\"red\"></Button>\n                )}\n              </View>\n            </View>\n          </ScrollView>\n        </SafeAreaView>\n      </>\n    );\n  }\n\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}