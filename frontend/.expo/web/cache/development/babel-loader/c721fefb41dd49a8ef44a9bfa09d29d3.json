{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewzhang/Desktop/berkeley/fintech/sports-betting/frontend/src/screens/RegistrationScreen/RegistrationScreen.js\";\nimport React, { useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport styles from \"./styles\";\nimport { firebase } from \"../../firebase/config\";\nexport default function RegistrationScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      fullName = _useState2[0],\n      setFullName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      confirmPassword = _useState8[0],\n      setConfirmPassword = _useState8[1];\n\n  var onFooterLinkPress = function onFooterLinkPress() {\n    navigation.navigate('Login');\n  };\n\n  var onRegisterPress = function onRegisterPress() {\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match.\");\n      return;\n    }\n\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(function (response) {\n      return alert(response);\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, React.createElement(KeyboardAwareScrollView, {\n    style: {\n      flex: 1,\n      width: '100%'\n    },\n    keyboardShouldPersistTaps: \"always\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../../../assets/icon.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Full Name\",\n    placeholderTextColor: \"#aaaaaa\",\n    onChangeText: function onChangeText(text) {\n      return setFullName(text);\n    },\n    value: fullName,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"E-mail\",\n    placeholderTextColor: \"#aaaaaa\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#aaaaaa\",\n    secureTextEntry: true,\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#aaaaaa\",\n    secureTextEntry: true,\n    placeholder: \"Confirm Password\",\n    onChangeText: function onChangeText(text) {\n      return setConfirmPassword(text);\n    },\n    value: confirmPassword,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return onRegisterPress();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Create account\")), React.createElement(View, {\n    style: styles.footerView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.footerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, \"Already got an account? \", React.createElement(Text, {\n    onPress: onFooterLinkPress,\n    style: styles.footerLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 77\n    }\n  }, \"Log in\")))));\n}","map":{"version":3,"sources":["/Users/andrewzhang/Desktop/berkeley/fintech/sports-betting/frontend/src/screens/RegistrationScreen/RegistrationScreen.js"],"names":["React","useState","KeyboardAwareScrollView","styles","firebase","RegistrationScreen","navigation","fullName","setFullName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","onFooterLinkPress","navigate","onRegisterPress","alert","auth","createUserWithEmailAndPassword","then","response","catch","error","container","flex","width","logo","require","input","text","button","buttonTitle","footerView","footerText","footerLink"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,SAASC,uBAAT,QAAwC,yCAAxC;AACA,OAAOC,MAAP;AACA,SAASC,QAAT;AAEA,eAAe,SAASC,kBAAT,OAA0C;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AAAA,kBACrBL,QAAQ,CAAC,EAAD,CADa;AAAA;AAAA,MAC9CM,QAD8C;AAAA,MACpCC,WADoC;;AAAA,mBAE3BP,QAAQ,CAAC,EAAD,CAFmB;AAAA;AAAA,MAE9CQ,KAF8C;AAAA,MAEvCC,QAFuC;;AAAA,mBAGrBT,QAAQ,CAAC,EAAD,CAHa;AAAA;AAAA,MAG9CU,QAH8C;AAAA,MAGpCC,WAHoC;;AAAA,mBAIPX,QAAQ,CAAC,EAAD,CAJD;AAAA;AAAA,MAI9CY,eAJ8C;AAAA,MAI7BC,kBAJ6B;;AAMrD,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5BT,IAAAA,UAAU,CAACU,QAAX,CAAoB,OAApB;AACH,GAFD;;AAIA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACtB,QAAIN,QAAQ,KAAKE,eAAjB,EAAkC;AAC9BK,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACA;AACH;;AACDd,IAAAA,QAAQ,CACHe,IADL,GAEKC,8BAFL,CAEoCX,KAFpC,EAE2CE,QAF3C,EAGKU,IAHL,CAGU,UAACC,QAAD;AAAA,aAAcJ,KAAK,CAACI,QAAD,CAAnB;AAAA,KAHV,EAIKC,KAJL,CAIW,UAACC,KAAD,EAAW;AACdN,MAAAA,KAAK,CAACM,KAAD,CAAL;AACP,KAND;AAOH,GAZL;;AAcA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErB,MAAM,CAACsB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,uBAAD;AACI,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,KAAK,EAAE;AAAlB,KADX;AAEI,IAAA,yBAAyB,EAAC,QAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,KAAD;AACI,IAAA,KAAK,EAAExB,MAAM,CAACyB,IADlB;AAEI,IAAA,MAAM,EAAEC,OAAO,4BAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAOI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE1B,MAAM,CAAC2B,KADlB;AAEI,IAAA,WAAW,EAAC,WAFhB;AAGI,IAAA,oBAAoB,EAAC,SAHzB;AAII,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUvB,WAAW,CAACuB,IAAD,CAArB;AAAA,KAJlB;AAKI,IAAA,KAAK,EAAExB,QALX;AAMI,IAAA,qBAAqB,EAAC,aAN1B;AAOI,IAAA,cAAc,EAAC,MAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAgBI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEJ,MAAM,CAAC2B,KADlB;AAEI,IAAA,WAAW,EAAC,QAFhB;AAGI,IAAA,oBAAoB,EAAC,SAHzB;AAII,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUrB,QAAQ,CAACqB,IAAD,CAAlB;AAAA,KAJlB;AAKI,IAAA,KAAK,EAAEtB,KALX;AAMI,IAAA,qBAAqB,EAAC,aAN1B;AAOI,IAAA,cAAc,EAAC,MAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,EAyBI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEN,MAAM,CAAC2B,KADlB;AAEI,IAAA,oBAAoB,EAAC,SAFzB;AAGI,IAAA,eAAe,MAHnB;AAII,IAAA,WAAW,EAAC,UAJhB;AAKI,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUnB,WAAW,CAACmB,IAAD,CAArB;AAAA,KALlB;AAMI,IAAA,KAAK,EAAEpB,QANX;AAOI,IAAA,qBAAqB,EAAC,aAP1B;AAQI,IAAA,cAAc,EAAC,MARnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,EAmCI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAER,MAAM,CAAC2B,KADlB;AAEI,IAAA,oBAAoB,EAAC,SAFzB;AAGI,IAAA,eAAe,MAHnB;AAII,IAAA,WAAW,EAAC,kBAJhB;AAKI,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUjB,kBAAkB,CAACiB,IAAD,CAA5B;AAAA,KALlB;AAMI,IAAA,KAAK,EAAElB,eANX;AAOI,IAAA,qBAAqB,EAAC,aAP1B;AAQI,IAAA,cAAc,EAAC,MARnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCJ,EA6CI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAEV,MAAM,CAAC6B,MADlB;AAEI,IAAA,OAAO,EAAE;AAAA,aAAMf,eAAe,EAArB;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,MAAM,CAAC8B,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,CA7CJ,EAkDI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9B,MAAM,CAAC+B,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/B,MAAM,CAACgC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAwD,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEpB,iBAAf;AAAkC,IAAA,KAAK,EAAEZ,MAAM,CAACiC,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAxD,CADJ,CAlDJ,CADJ,CADJ;AA0DH","sourcesContent":["import React, { useState } from 'react'\nimport { Image, Text, TextInput, TouchableOpacity, View } from 'react-native'\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport styles from './styles';\nimport { firebase } from '../../firebase/config'\n\nexport default function RegistrationScreen({navigation}) {\n    const [fullName, setFullName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n\n    const onFooterLinkPress = () => {\n        navigation.navigate('Login')\n    }\n\n    const onRegisterPress = () => {\n            if (password !== confirmPassword) {\n                alert(\"Passwords don't match.\")\n                return\n            }\n            firebase\n                .auth()\n                .createUserWithEmailAndPassword(email, password)\n                .then((response) => alert(response))\n                .catch((error) => {\n                    alert(error)\n            });\n        }\n\n    return (\n        <View style={styles.container}>\n            <KeyboardAwareScrollView\n                style={{ flex: 1, width: '100%' }}\n                keyboardShouldPersistTaps=\"always\">\n                <Image\n                    style={styles.logo}\n                    source={require('../../../assets/icon.png')}\n                />\n                <TextInput\n                    style={styles.input}\n                    placeholder='Full Name'\n                    placeholderTextColor=\"#aaaaaa\"\n                    onChangeText={(text) => setFullName(text)}\n                    value={fullName}\n                    underlineColorAndroid=\"transparent\"\n                    autoCapitalize=\"none\"\n                />\n                <TextInput\n                    style={styles.input}\n                    placeholder='E-mail'\n                    placeholderTextColor=\"#aaaaaa\"\n                    onChangeText={(text) => setEmail(text)}\n                    value={email}\n                    underlineColorAndroid=\"transparent\"\n                    autoCapitalize=\"none\"\n                />\n                <TextInput\n                    style={styles.input}\n                    placeholderTextColor=\"#aaaaaa\"\n                    secureTextEntry\n                    placeholder='Password'\n                    onChangeText={(text) => setPassword(text)}\n                    value={password}\n                    underlineColorAndroid=\"transparent\"\n                    autoCapitalize=\"none\"\n                />\n                <TextInput\n                    style={styles.input}\n                    placeholderTextColor=\"#aaaaaa\"\n                    secureTextEntry\n                    placeholder='Confirm Password'\n                    onChangeText={(text) => setConfirmPassword(text)}\n                    value={confirmPassword}\n                    underlineColorAndroid=\"transparent\"\n                    autoCapitalize=\"none\"\n                />\n                <TouchableOpacity\n                    style={styles.button}\n                    onPress={() => onRegisterPress()}>\n                    <Text style={styles.buttonTitle}>Create account</Text>\n                </TouchableOpacity>\n                <View style={styles.footerView}>\n                    <Text style={styles.footerText}>Already got an account? <Text onPress={onFooterLinkPress} style={styles.footerLink}>Log in</Text></Text>\n                </View>\n            </KeyboardAwareScrollView>\n        </View>\n    )\n}"]},"metadata":{},"sourceType":"module"}