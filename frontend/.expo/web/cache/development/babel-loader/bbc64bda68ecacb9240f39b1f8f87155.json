{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewzhang/Desktop/berkeley/fintech/sports-betting/frontend/App.js\";\nimport 'react-native-gesture-handler';\nimport React, { useEffect, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NativeRouter, Route, Link } from \"react-router-native\";\nimport Routes from \"./src/routes/RoutesConfig\";\nimport { decode, encode } from 'base-64';\nimport { firebase } from \"./src/firebase/config\";\n\nif (!global.btoa) {\n  global.btoa = encode;\n}\n\nif (!global.atob) {\n  global.atob = decode;\n}\n\nvar Stack = createStackNavigator();\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  useEffect(function () {\n    var usersRef = firebase.firestore().collection('users');\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        usersRef.doc(user.uid).get().then(function (document) {\n          var userData = document.data();\n          setLoading(false);\n          setUser(userData);\n        }).catch(function (error) {\n          setLoading(false);\n        });\n      } else {\n        setLoading(false);\n      }\n    });\n  }, []);\n  return React.createElement(NativeRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, routes.map(function (route) {\n    return React.createElement(Route, {\n      key: route.path,\n      path: route.path,\n      component: route.component,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    });\n  }));\n}","map":{"version":3,"sources":["/Users/andrewzhang/Desktop/berkeley/fintech/sports-betting/frontend/App.js"],"names":["React","useEffect","useState","NavigationContainer","createStackNavigator","NativeRouter","Route","Link","Routes","decode","encode","firebase","global","btoa","atob","Stack","App","loading","setLoading","user","setUser","usersRef","firestore","collection","auth","onAuthStateChanged","doc","uid","get","then","document","userData","data","catch","error","routes","map","route","path","component"],"mappings":";;AAAA,OAAO,8BAAP;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,YAAT,EAAuBC,KAAvB,EAA8BC,IAA9B,QAA0C,qBAA1C;AACA,OAAOC,MAAP;AAGA,SAAQC,MAAR,EAAgBC,MAAhB,QAA6B,SAA7B;AACA,SAASC,QAAT;;AACA,IAAI,CAACC,MAAM,CAACC,IAAZ,EAAkB;AAAGD,EAAAA,MAAM,CAACC,IAAP,GAAcH,MAAd;AAAsB;;AAC3C,IAAI,CAACE,MAAM,CAACE,IAAZ,EAAkB;AAAEF,EAAAA,MAAM,CAACE,IAAP,GAAcL,MAAd;AAAsB;;AAE1C,IAAMM,KAAK,GAAGX,oBAAoB,EAAlC;AAEA,eAAe,SAASY,GAAT,GAAe;AAAA;;AAAA,kBAEEd,QAAQ,CAAC,IAAD,CAFV;AAAA;AAAA,MAErBe,OAFqB;AAAA,MAEZC,UAFY;;AAAA,mBAGJhB,QAAQ,CAAC,IAAD,CAHJ;AAAA;AAAA,MAGrBiB,IAHqB;AAAA,MAGfC,OAHe;;AAW5BnB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMoB,QAAQ,GAAGV,QAAQ,CAACW,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,CAAjB;AACAZ,IAAAA,QAAQ,CAACa,IAAT,GAAgBC,kBAAhB,CAAmC,UAAAN,IAAI,EAAI;AACzC,UAAIA,IAAJ,EAAU;AACRE,QAAAA,QAAQ,CACLK,GADH,CACOP,IAAI,CAACQ,GADZ,EAEGC,GAFH,GAGGC,IAHH,CAGQ,UAACC,QAAD,EAAc;AAClB,cAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAAT,EAAjB;AACAd,UAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,UAAAA,OAAO,CAACW,QAAD,CAAP;AACD,SAPH,EAQGE,KARH,CAQS,UAACC,KAAD,EAAW;AAChBhB,UAAAA,UAAU,CAAC,KAAD,CAAV;AACD,SAVH;AAWD,OAZD,MAYO;AACLA,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAhBD;AAiBD,GAnBQ,EAmBN,EAnBM,CAAT;AAqBA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACOiB,MAAM,CAACC,GAAP,CAAW,UAACC,KAAD;AAAA,WACR,oBAAC,KAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACC,IADb;AAEE,MAAA,IAAI,EAAED,KAAK,CAACC,IAFd;AAGE,MAAA,SAAS,EAAED,KAAK,CAACE,SAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADQ;AAAA,GAAX,CADP,CADF;AAWD","sourcesContent":["import 'react-native-gesture-handler';\n\nimport React, { useEffect, useState } from 'react'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { NativeRouter, Route, Link } from \"react-router-native\";\nimport Routes from \"./src/routes/RoutesConfig\"\n\n\nimport {decode, encode} from 'base-64'\nimport { firebase } from './src/firebase/config'\nif (!global.btoa) {  global.btoa = encode }\nif (!global.atob) { global.atob = decode }\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n\n  const [loading, setLoading] = useState(true)\n  const [user, setUser] = useState(null)\n\n  // if (loading) {\t\n  //   return (\t\n  //     <></>\t\n  //   )\t\n  // }\n\n  useEffect(() => {\n    const usersRef = firebase.firestore().collection('users');\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        usersRef\n          .doc(user.uid)\n          .get()\n          .then((document) => {\n            const userData = document.data()\n            setLoading(false)\n            setUser(userData)\n          })\n          .catch((error) => {\n            setLoading(false)\n          });\n      } else {\n        setLoading(false)\n      }\n    });\n  }, []);\n\n  return (\n    <NativeRouter>\n          {routes.map((route) => (\n              <Route\n                key={route.path}\n                path={route.path}\n                component={route.component}\n              />\n            ))}\n    </NativeRouter>\n  );\n}"]},"metadata":{},"sourceType":"module"}