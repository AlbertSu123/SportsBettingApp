{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { isObject, isString, isUndefined, isBoolean } from '@react-native-firebase/app/lib/common';\n\nvar User = function () {\n  function User(auth, user) {\n    _classCallCheck(this, User);\n\n    this._auth = auth;\n    this._user = user;\n  }\n\n  _createClass(User, [{\n    key: \"displayName\",\n    get: function get() {\n      return this._user.displayName || null;\n    }\n  }, {\n    key: \"email\",\n    get: function get() {\n      return this._user.email || null;\n    }\n  }, {\n    key: \"emailVerified\",\n    get: function get() {\n      return this._user.emailVerified || false;\n    }\n  }, {\n    key: \"isAnonymous\",\n    get: function get() {\n      return this._user.isAnonymous || false;\n    }\n  }, {\n    key: \"metadata\",\n    get: function get() {\n      var metadata = this._user.metadata;\n      return {\n        lastSignInTime: new Date(metadata.lastSignInTime).toISOString(),\n        creationTime: new Date(metadata.creationTime).toISOString()\n      };\n    }\n  }, {\n    key: \"phoneNumber\",\n    get: function get() {\n      return this._user.phoneNumber || null;\n    }\n  }, {\n    key: \"photoURL\",\n    get: function get() {\n      return this._user.photoURL || null;\n    }\n  }, {\n    key: \"providerData\",\n    get: function get() {\n      return this._user.providerData;\n    }\n  }, {\n    key: \"providerId\",\n    get: function get() {\n      return this._user.providerId;\n    }\n  }, {\n    key: \"uid\",\n    get: function get() {\n      return this._user.uid;\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      var _this = this;\n\n      return this._auth.native.delete().then(function () {\n        _this._auth._setUser();\n      });\n    }\n  }, {\n    key: \"getIdToken\",\n    value: function getIdToken() {\n      var forceRefresh = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      return this._auth.native.getIdToken(forceRefresh);\n    }\n  }, {\n    key: \"getIdTokenResult\",\n    value: function getIdTokenResult() {\n      var forceRefresh = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      return this._auth.native.getIdTokenResult(forceRefresh);\n    }\n  }, {\n    key: \"linkWithCredential\",\n    value: function linkWithCredential(credential) {\n      var _this2 = this;\n\n      return this._auth.native.linkWithCredential(credential.providerId, credential.token, credential.secret).then(function (userCredential) {\n        return _this2._auth._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"reauthenticateWithCredential\",\n    value: function reauthenticateWithCredential(credential) {\n      var _this3 = this;\n\n      return this._auth.native.reauthenticateWithCredential(credential.providerId, credential.token, credential.secret).then(function (userCredential) {\n        return _this3._auth._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      var _this4 = this;\n\n      return this._auth.native.reload().then(function (user) {\n        _this4._auth._setUser(user);\n      });\n    }\n  }, {\n    key: \"sendEmailVerification\",\n    value: function sendEmailVerification(actionCodeSettings) {\n      var _this5 = this;\n\n      if (isObject(actionCodeSettings)) {\n        if (!isString(actionCodeSettings.url)) {\n          throw new Error(\"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.url' expected a string value.\");\n        }\n\n        if (!isUndefined(actionCodeSettings.dynamicLinkDomain) && !isString(actionCodeSettings.dynamicLinkDomain)) {\n          throw new Error(\"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.dynamicLinkDomain' expected a string value.\");\n        }\n\n        if (!isUndefined(actionCodeSettings.handleCodeInApp) && !isBoolean(actionCodeSettings.handleCodeInApp)) {\n          throw new Error(\"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.handleCodeInApp' expected a boolean value.\");\n        }\n\n        if (!isUndefined(actionCodeSettings.iOS)) {\n          if (!isObject(actionCodeSettings.iOS)) {\n            throw new Error(\"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.iOS' expected an object value.\");\n          }\n\n          if (!isString(actionCodeSettings.iOS.bundleId)) {\n            throw new Error(\"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.iOS.bundleId' expected a string value.\");\n          }\n        }\n\n        if (!isUndefined(actionCodeSettings.android)) {\n          if (!isObject(actionCodeSettings.android)) {\n            throw new Error(\"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.android' expected an object value.\");\n          }\n\n          if (!isString(actionCodeSettings.android.packageName)) {\n            throw new Error(\"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.android.packageName' expected a string value.\");\n          }\n\n          if (!isUndefined(actionCodeSettings.android.installApp) && !isBoolean(actionCodeSettings.android.installApp)) {\n            throw new Error(\"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.android.installApp' expected a boolean value.\");\n          }\n\n          if (!isUndefined(actionCodeSettings.android.minimumVersion) && !isString(actionCodeSettings.android.minimumVersion)) {\n            throw new Error(\"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.android.minimumVersion' expected a string value.\");\n          }\n        }\n      }\n\n      return this._auth.native.sendEmailVerification(actionCodeSettings).then(function (user) {\n        _this5._auth._setUser(user);\n      });\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return _extends({}, this._user);\n    }\n  }, {\n    key: \"unlink\",\n    value: function unlink(providerId) {\n      var _this6 = this;\n\n      return this._auth.native.unlink(providerId).then(function (user) {\n        return _this6._auth._setUser(user);\n      });\n    }\n  }, {\n    key: \"updateEmail\",\n    value: function updateEmail(email) {\n      var _this7 = this;\n\n      return this._auth.native.updateEmail(email).then(function (user) {\n        _this7._auth._setUser(user);\n      });\n    }\n  }, {\n    key: \"updatePassword\",\n    value: function updatePassword(password) {\n      var _this8 = this;\n\n      return this._auth.native.updatePassword(password).then(function (user) {\n        _this8._auth._setUser(user);\n      });\n    }\n  }, {\n    key: \"updatePhoneNumber\",\n    value: function updatePhoneNumber(credential) {\n      var _this9 = this;\n\n      return this._auth.native.updatePhoneNumber(credential.providerId, credential.token, credential.secret).then(function (user) {\n        _this9._auth._setUser(user);\n      });\n    }\n  }, {\n    key: \"updateProfile\",\n    value: function updateProfile(updates) {\n      var _this10 = this;\n\n      return this._auth.native.updateProfile(updates).then(function (user) {\n        _this10._auth._setUser(user);\n      });\n    }\n  }, {\n    key: \"verifyBeforeUpdateEmail\",\n    value: function verifyBeforeUpdateEmail(newEmail, actionCodeSettings) {\n      var _this11 = this;\n\n      if (!isString(newEmail)) {\n        throw new Error(\"firebase.auth.User.verifyBeforeUpdateEmail(*) 'newEmail' expected a string value.\");\n      }\n\n      if (isObject(actionCodeSettings)) {\n        if (!isString(actionCodeSettings.url)) {\n          throw new Error(\"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.url' expected a string value.\");\n        }\n\n        if (!isUndefined(actionCodeSettings.dynamicLinkDomain) && !isString(actionCodeSettings.dynamicLinkDomain)) {\n          throw new Error(\"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.dynamicLinkDomain' expected a string value.\");\n        }\n\n        if (!isUndefined(actionCodeSettings.handleCodeInApp) && !isBoolean(actionCodeSettings.handleCodeInApp)) {\n          throw new Error(\"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.handleCodeInApp' expected a boolean value.\");\n        }\n\n        if (!isUndefined(actionCodeSettings.iOS)) {\n          if (!isObject(actionCodeSettings.iOS)) {\n            throw new Error(\"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.iOS' expected an object value.\");\n          }\n\n          if (!isString(actionCodeSettings.iOS.bundleId)) {\n            throw new Error(\"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.iOS.bundleId' expected a string value.\");\n          }\n        }\n\n        if (!isUndefined(actionCodeSettings.android)) {\n          if (!isObject(actionCodeSettings.android)) {\n            throw new Error(\"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.android' expected an object value.\");\n          }\n\n          if (!isString(actionCodeSettings.android.packageName)) {\n            throw new Error(\"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.android.packageName' expected a string value.\");\n          }\n\n          if (!isUndefined(actionCodeSettings.android.installApp) && !isBoolean(actionCodeSettings.android.installApp)) {\n            throw new Error(\"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.android.installApp' expected a boolean value.\");\n          }\n\n          if (!isUndefined(actionCodeSettings.android.minimumVersion) && !isString(actionCodeSettings.android.minimumVersion)) {\n            throw new Error(\"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.android.minimumVersion' expected a string value.\");\n          }\n        }\n      }\n\n      return this._auth.native.verifyBeforeUpdateEmail(newEmail, actionCodeSettings).then(function (user) {\n        _this11._auth._setUser(user);\n      });\n    }\n  }, {\n    key: \"linkWithPhoneNumber\",\n    value: function linkWithPhoneNumber() {\n      throw new Error('firebase.auth.User.linkWithPhoneNumber() is unsupported by the native Firebase SDKs.');\n    }\n  }, {\n    key: \"linkWithPopup\",\n    value: function linkWithPopup() {\n      throw new Error('firebase.auth.User.linkWithPopup() is unsupported by the native Firebase SDKs.');\n    }\n  }, {\n    key: \"linkWithRedirect\",\n    value: function linkWithRedirect() {\n      throw new Error('firebase.auth.User.linkWithRedirect() is unsupported by the native Firebase SDKs.');\n    }\n  }, {\n    key: \"reauthenticateWithPhoneNumber\",\n    value: function reauthenticateWithPhoneNumber() {\n      throw new Error('firebase.auth.User.reauthenticateWithPhoneNumber() is unsupported by the native Firebase SDKs.');\n    }\n  }, {\n    key: \"reauthenticateWithPopup\",\n    value: function reauthenticateWithPopup() {\n      throw new Error('firebase.auth.User.reauthenticateWithPopup() is unsupported by the native Firebase SDKs.');\n    }\n  }, {\n    key: \"reauthenticateWithRedirect\",\n    value: function reauthenticateWithRedirect() {\n      throw new Error('firebase.auth.User.reauthenticateWithRedirect() is unsupported by the native Firebase SDKs.');\n    }\n  }, {\n    key: \"refreshToken\",\n    get: function get() {\n      throw new Error('firebase.auth.User.refreshToken is unsupported by the native Firebase SDKs.');\n    }\n  }]);\n\n  return User;\n}();\n\nexport { User as default };","map":{"version":3,"sources":["/Users/andrewzhang/Desktop/berkeley/fintech/sports-betting/frontend/node_modules/@react-native-firebase/auth/lib/User.js"],"names":["isObject","isString","isUndefined","isBoolean","User","auth","user","_auth","_user","displayName","email","emailVerified","isAnonymous","metadata","lastSignInTime","Date","toISOString","creationTime","phoneNumber","photoURL","providerData","providerId","uid","native","delete","then","_setUser","forceRefresh","getIdToken","getIdTokenResult","credential","linkWithCredential","token","secret","userCredential","_setUserCredential","reauthenticateWithCredential","reload","actionCodeSettings","url","Error","dynamicLinkDomain","handleCodeInApp","iOS","bundleId","android","packageName","installApp","minimumVersion","sendEmailVerification","unlink","updateEmail","password","updatePassword","updatePhoneNumber","updates","updateProfile","newEmail","verifyBeforeUpdateEmail"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isObject, isString, isUndefined, isBoolean } from '@react-native-firebase/app/lib/common';\n\nexport default class User {\n  constructor(auth, user) {\n    this._auth = auth;\n    this._user = user;\n  }\n\n  get displayName() {\n    return this._user.displayName || null;\n  }\n\n  get email() {\n    return this._user.email || null;\n  }\n\n  get emailVerified() {\n    return this._user.emailVerified || false;\n  }\n\n  get isAnonymous() {\n    return this._user.isAnonymous || false;\n  }\n\n  get metadata() {\n    const { metadata } = this._user;\n\n    return {\n      lastSignInTime: new Date(metadata.lastSignInTime).toISOString(),\n      creationTime: new Date(metadata.creationTime).toISOString(),\n    };\n  }\n\n  get phoneNumber() {\n    return this._user.phoneNumber || null;\n  }\n\n  get photoURL() {\n    return this._user.photoURL || null;\n  }\n\n  get providerData() {\n    return this._user.providerData;\n  }\n\n  get providerId() {\n    return this._user.providerId;\n  }\n\n  get uid() {\n    return this._user.uid;\n  }\n\n  delete() {\n    return this._auth.native.delete().then(() => {\n      this._auth._setUser();\n    });\n  }\n\n  getIdToken(forceRefresh = false) {\n    return this._auth.native.getIdToken(forceRefresh);\n  }\n\n  getIdTokenResult(forceRefresh = false) {\n    return this._auth.native.getIdTokenResult(forceRefresh);\n  }\n\n  linkWithCredential(credential) {\n    return this._auth.native\n      .linkWithCredential(credential.providerId, credential.token, credential.secret)\n      .then(userCredential => this._auth._setUserCredential(userCredential));\n  }\n\n  reauthenticateWithCredential(credential) {\n    return this._auth.native\n      .reauthenticateWithCredential(credential.providerId, credential.token, credential.secret)\n      .then(userCredential => this._auth._setUserCredential(userCredential));\n  }\n\n  reload() {\n    return this._auth.native.reload().then(user => {\n      this._auth._setUser(user);\n    });\n  }\n\n  sendEmailVerification(actionCodeSettings) {\n    if (isObject(actionCodeSettings)) {\n      if (!isString(actionCodeSettings.url)) {\n        throw new Error(\n          \"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.url' expected a string value.\",\n        );\n      }\n\n      if (\n        !isUndefined(actionCodeSettings.dynamicLinkDomain) &&\n        !isString(actionCodeSettings.dynamicLinkDomain)\n      ) {\n        throw new Error(\n          \"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.dynamicLinkDomain' expected a string value.\",\n        );\n      }\n\n      if (\n        !isUndefined(actionCodeSettings.handleCodeInApp) &&\n        !isBoolean(actionCodeSettings.handleCodeInApp)\n      ) {\n        throw new Error(\n          \"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.handleCodeInApp' expected a boolean value.\",\n        );\n      }\n\n      if (!isUndefined(actionCodeSettings.iOS)) {\n        if (!isObject(actionCodeSettings.iOS)) {\n          throw new Error(\n            \"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.iOS' expected an object value.\",\n          );\n        }\n        if (!isString(actionCodeSettings.iOS.bundleId)) {\n          throw new Error(\n            \"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.iOS.bundleId' expected a string value.\",\n          );\n        }\n      }\n\n      if (!isUndefined(actionCodeSettings.android)) {\n        if (!isObject(actionCodeSettings.android)) {\n          throw new Error(\n            \"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.android' expected an object value.\",\n          );\n        }\n        if (!isString(actionCodeSettings.android.packageName)) {\n          throw new Error(\n            \"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.android.packageName' expected a string value.\",\n          );\n        }\n\n        if (\n          !isUndefined(actionCodeSettings.android.installApp) &&\n          !isBoolean(actionCodeSettings.android.installApp)\n        ) {\n          throw new Error(\n            \"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.android.installApp' expected a boolean value.\",\n          );\n        }\n\n        if (\n          !isUndefined(actionCodeSettings.android.minimumVersion) &&\n          !isString(actionCodeSettings.android.minimumVersion)\n        ) {\n          throw new Error(\n            \"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.android.minimumVersion' expected a string value.\",\n          );\n        }\n      }\n    }\n\n    return this._auth.native.sendEmailVerification(actionCodeSettings).then(user => {\n      this._auth._setUser(user);\n    });\n  }\n\n  toJSON() {\n    return Object.assign({}, this._user);\n  }\n\n  unlink(providerId) {\n    return this._auth.native.unlink(providerId).then(user => this._auth._setUser(user));\n  }\n\n  updateEmail(email) {\n    return this._auth.native.updateEmail(email).then(user => {\n      this._auth._setUser(user);\n    });\n  }\n\n  updatePassword(password) {\n    return this._auth.native.updatePassword(password).then(user => {\n      this._auth._setUser(user);\n    });\n  }\n\n  updatePhoneNumber(credential) {\n    return this._auth.native\n      .updatePhoneNumber(credential.providerId, credential.token, credential.secret)\n      .then(user => {\n        this._auth._setUser(user);\n      });\n  }\n\n  updateProfile(updates) {\n    return this._auth.native.updateProfile(updates).then(user => {\n      this._auth._setUser(user);\n    });\n  }\n\n  verifyBeforeUpdateEmail(newEmail, actionCodeSettings) {\n    if (!isString(newEmail)) {\n      throw new Error(\n        \"firebase.auth.User.verifyBeforeUpdateEmail(*) 'newEmail' expected a string value.\",\n      );\n    }\n\n    if (isObject(actionCodeSettings)) {\n      if (!isString(actionCodeSettings.url)) {\n        throw new Error(\n          \"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.url' expected a string value.\",\n        );\n      }\n\n      if (\n        !isUndefined(actionCodeSettings.dynamicLinkDomain) &&\n        !isString(actionCodeSettings.dynamicLinkDomain)\n      ) {\n        throw new Error(\n          \"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.dynamicLinkDomain' expected a string value.\",\n        );\n      }\n\n      if (\n        !isUndefined(actionCodeSettings.handleCodeInApp) &&\n        !isBoolean(actionCodeSettings.handleCodeInApp)\n      ) {\n        throw new Error(\n          \"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.handleCodeInApp' expected a boolean value.\",\n        );\n      }\n\n      if (!isUndefined(actionCodeSettings.iOS)) {\n        if (!isObject(actionCodeSettings.iOS)) {\n          throw new Error(\n            \"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.iOS' expected an object value.\",\n          );\n        }\n        if (!isString(actionCodeSettings.iOS.bundleId)) {\n          throw new Error(\n            \"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.iOS.bundleId' expected a string value.\",\n          );\n        }\n      }\n\n      if (!isUndefined(actionCodeSettings.android)) {\n        if (!isObject(actionCodeSettings.android)) {\n          throw new Error(\n            \"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.android' expected an object value.\",\n          );\n        }\n        if (!isString(actionCodeSettings.android.packageName)) {\n          throw new Error(\n            \"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.android.packageName' expected a string value.\",\n          );\n        }\n\n        if (\n          !isUndefined(actionCodeSettings.android.installApp) &&\n          !isBoolean(actionCodeSettings.android.installApp)\n        ) {\n          throw new Error(\n            \"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.android.installApp' expected a boolean value.\",\n          );\n        }\n\n        if (\n          !isUndefined(actionCodeSettings.android.minimumVersion) &&\n          !isString(actionCodeSettings.android.minimumVersion)\n        ) {\n          throw new Error(\n            \"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.android.minimumVersion' expected a string value.\",\n          );\n        }\n      }\n    }\n\n    return this._auth.native.verifyBeforeUpdateEmail(newEmail, actionCodeSettings).then(user => {\n      this._auth._setUser(user);\n    });\n  }\n\n  /**\n   * KNOWN UNSUPPORTED METHODS\n   */\n\n  linkWithPhoneNumber() {\n    throw new Error(\n      'firebase.auth.User.linkWithPhoneNumber() is unsupported by the native Firebase SDKs.',\n    );\n  }\n\n  linkWithPopup() {\n    throw new Error(\n      'firebase.auth.User.linkWithPopup() is unsupported by the native Firebase SDKs.',\n    );\n  }\n\n  linkWithRedirect() {\n    throw new Error(\n      'firebase.auth.User.linkWithRedirect() is unsupported by the native Firebase SDKs.',\n    );\n  }\n\n  reauthenticateWithPhoneNumber() {\n    throw new Error(\n      'firebase.auth.User.reauthenticateWithPhoneNumber() is unsupported by the native Firebase SDKs.',\n    );\n  }\n\n  reauthenticateWithPopup() {\n    throw new Error(\n      'firebase.auth.User.reauthenticateWithPopup() is unsupported by the native Firebase SDKs.',\n    );\n  }\n\n  reauthenticateWithRedirect() {\n    throw new Error(\n      'firebase.auth.User.reauthenticateWithRedirect() is unsupported by the native Firebase SDKs.',\n    );\n  }\n\n  get refreshToken() {\n    throw new Error('firebase.auth.User.refreshToken is unsupported by the native Firebase SDKs.');\n  }\n}\n"]},"metadata":{},"sourceType":"module"}